<html>
  <head>
    <title>JUnit Lambda</title>
  </head>
  <body>
    <h1 align="center"><img src="images/junit-lambda/junit-lambda-logo.png" alt="JUnit Lambda" /></h1>
    <hr />
    <h2 align="center" class="muted">The crowdfunding campaign has not started yet.</h2>
    <p align="center"><a class="btn btn-large btn-success" href="https://docs.google.com/forms/d/19-VHMXLYk9Hh0a3S6rYOXozU5WMX01wF3Z-BVkMy5J0/viewform" role="button" style="font-size:150%">Get notified when it starts!</a></p>
    <hr />
    <h2>Why JUnit needs your support</h2>
    <p>With 43 million downloads from Maven Central in 2014 <b>JUnit</b> still is the default testing library for Java. Millions of projects rely on it being both stable and allowing to test the latest features of the latest JDK. Moreover, many other testing libraries hook into JUnit as a way to enable IDE and build tool integration. Keeping JUnit in shape is a major task for those maintaining and evolving the library.</p>
    <p>As of today, none of the active JUnit maintainers are payed by their employer to do this work. Not surprisingly many unresolved issues have piled up and, what's worse, there is no hope to get JUnit to support and make use of all the features in Java 8 any time soon. Since <i>Lambdas</i> are the most prominent of those features, we borrowed their name for the campaign.</p>
    <p>This campaign will allow a team of long-time JUnit committers, backed by a few experienced Java developers, to focus on getting JUnit ready for the years - and JDKs - to come.</p>
    <h2>The Vision</h2>
    <p>In preparation for the campaign we've identified two main areas to focus on during the upcoming JUnit overhaul:</p>
    <ul>
      <li><b>Decouple test execution and reporting from test definition and provisioning</b>: This will greatly simplify further evolution of JUnit and allow users to mix test specifications from different test libraries, like JUnit, Spock, ScalaTest and so on.</li>
      <li><b>Making use of Java 8 features (Lambdas, Streams, Interface default methods) for better assertions, generating test cases, formulating test hierachies, testing asynchronous code and other stuff</b>: We will provide those extensions in additional libraries to keep the JUnit core compatible with older JDKs.</li>
    </ul>
    <p>All development will happen openly on <a href="https://github.com/junit-team/junit" target="_blank">Github</a> in order to foster early feedback and detect problems as soon as possible.</p>
  </body>
</html>
